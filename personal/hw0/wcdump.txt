
wc:     file format elf64-x86-64
wc
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400520

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x00000000000008ac memsz 0x00000000000008ac flags r-x
    LOAD off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**21
         filesz 0x0000000000000248 memsz 0x0000000000000250 flags rw-
 DYNAMIC off    0x0000000000000e28 vaddr 0x0000000000600e28 paddr 0x0000000000600e28 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000784 vaddr 0x0000000000400784 paddr 0x0000000000400784 align 2**2
         filesz 0x0000000000000034 memsz 0x0000000000000034 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**0
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000400490
  FINI                 0x0000000000400764
  INIT_ARRAY           0x0000000000600e10
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600e18
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400298
  STRTAB               0x0000000000400360
  SYMTAB               0x00000000004002b8
  STRSZ                0x0000000000000055
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000601000
  PLTRELSZ             0x0000000000000090
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000400400
  RELA                 0x00000000004003e8
  RELASZ               0x0000000000000018
  RELAENT              0x0000000000000018
  VERNEED              0x00000000004003c8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000004003b6

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000a8  00000000004002b8  00000000004002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000055  0000000000400360  0000000000400360  00000360  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000e  00000000004003b6  00000000004003b6  000003b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000004003c8  00000000004003c8  000003c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000018  00000000004003e8  00000000004003e8  000003e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000090  0000000000400400  0000000000400400  00000400  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001a  0000000000400490  0000000000400490  00000490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000070  00000000004004b0  00000000004004b0  000004b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000242  0000000000400520  0000000000400520  00000520  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  0000000000400764  0000000000400764  00000764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000013  0000000000400770  0000000000400770  00000770  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000034  0000000000400784  0000000000400784  00000784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000f4  00000000004007b8  00000000004007b8  000007b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600e10  0000000000600e10  00000e10  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000008  0000000000600e20  0000000000600e20  00000e20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001d0  0000000000600e28  0000000000600e28  00000e28  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000008  0000000000600ff8  0000000000600ff8  00000ff8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000048  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000601048  0000000000601048  00001048  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000008  0000000000601058  0000000000601058  00001058  2**0
                  ALLOC
 25 .comment      0000002b  0000000000000000  0000000000000000  00001058  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000030  0000000000000000  0000000000000000  00001083  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   00000321  0000000000000000  0000000000000000  000010b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 000000da  0000000000000000  0000000000000000  000013d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   000000eb  0000000000000000  0000000000000000  000014ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    0000025a  0000000000000000  0000000000000000  00001599  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400360 l    d  .dynstr	0000000000000000              .dynstr
00000000004003b6 l    d  .gnu.version	0000000000000000              .gnu.version
00000000004003c8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000004003e8 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400400 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000400490 l    d  .init	0000000000000000              .init
00000000004004b0 l    d  .plt	0000000000000000              .plt
0000000000400520 l    d  .text	0000000000000000              .text
0000000000400764 l    d  .fini	0000000000000000              .fini
0000000000400770 l    d  .rodata	0000000000000000              .rodata
0000000000400784 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000004007b8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e10 l    d  .init_array	0000000000000000              .init_array
0000000000600e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e20 l    d  .jcr	0000000000000000              .jcr
0000000000600e28 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff8 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601048 l    d  .data	0000000000000000              .data
0000000000601058 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e20 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400550 l     F .text	0000000000000000              deregister_tm_clones
0000000000400580 l     F .text	0000000000000000              register_tm_clones
00000000004005c0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601058 l     O .bss	0000000000000001              completed.6982
0000000000600e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000004005e0 l     F .text	0000000000000000              frame_dummy
0000000000600e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              wc.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000004008a8 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e20 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e18 l       .init_array	0000000000000000              __init_array_end
0000000000600e28 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e10 l       .init_array	0000000000000000              __init_array_start
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000400760 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000601048  w      .data	0000000000000000              data_start
0000000000601058 g       .data	0000000000000000              _edata
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
0000000000400764 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601048 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601050 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400770 g     O .rodata	0000000000000004              _IO_stdin_used
00000000004006f0 g     F .text	0000000000000065              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              _IO_getc@@GLIBC_2.2.5
0000000000601060 g       .bss	0000000000000000              _end
0000000000400520 g     F .text	0000000000000000              _start
0000000000601058 g       .bss	0000000000000000              __bss_start
000000000040060d g     F .text	00000000000000da              main
0000000000000000       F *UND*	0000000000000000              fopen@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000601058 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000400490 g     F .init	0000000000000000              _init



Disassembly of section .init:

0000000000400490 <_init>:
  400490:	48 83 ec 08          	sub    $0x8,%rsp
  400494:	48 8b 05 5d 0b 20 00 	mov    0x200b5d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40049b:	48 85 c0             	test   %rax,%rax
  40049e:	74 05                	je     4004a5 <_init+0x15>
  4004a0:	e8 4b 00 00 00       	callq  4004f0 <__gmon_start__@plt>
  4004a5:	48 83 c4 08          	add    $0x8,%rsp
  4004a9:	c3                   	retq   

Disassembly of section .plt:

00000000004004b0 <fclose@plt-0x10>:
  4004b0:	ff 35 52 0b 20 00    	pushq  0x200b52(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004b6:	ff 25 54 0b 20 00    	jmpq   *0x200b54(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004c0 <fclose@plt>:
  4004c0:	ff 25 52 0b 20 00    	jmpq   *0x200b52(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004c6:	68 00 00 00 00       	pushq  $0x0
  4004cb:	e9 e0 ff ff ff       	jmpq   4004b0 <_init+0x20>

00000000004004d0 <printf@plt>:
  4004d0:	ff 25 4a 0b 20 00    	jmpq   *0x200b4a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004d6:	68 01 00 00 00       	pushq  $0x1
  4004db:	e9 d0 ff ff ff       	jmpq   4004b0 <_init+0x20>

00000000004004e0 <__libc_start_main@plt>:
  4004e0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004e6:	68 02 00 00 00       	pushq  $0x2
  4004eb:	e9 c0 ff ff ff       	jmpq   4004b0 <_init+0x20>

00000000004004f0 <__gmon_start__@plt>:
  4004f0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004f6:	68 03 00 00 00       	pushq  $0x3
  4004fb:	e9 b0 ff ff ff       	jmpq   4004b0 <_init+0x20>

0000000000400500 <_IO_getc@plt>:
  400500:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400506:	68 04 00 00 00       	pushq  $0x4
  40050b:	e9 a0 ff ff ff       	jmpq   4004b0 <_init+0x20>

0000000000400510 <fopen@plt>:
  400510:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400516:	68 05 00 00 00       	pushq  $0x5
  40051b:	e9 90 ff ff ff       	jmpq   4004b0 <_init+0x20>

Disassembly of section .text:

0000000000400520 <_start>:
  400520:	31 ed                	xor    %ebp,%ebp
  400522:	49 89 d1             	mov    %rdx,%r9
  400525:	5e                   	pop    %rsi
  400526:	48 89 e2             	mov    %rsp,%rdx
  400529:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40052d:	50                   	push   %rax
  40052e:	54                   	push   %rsp
  40052f:	49 c7 c0 60 07 40 00 	mov    $0x400760,%r8
  400536:	48 c7 c1 f0 06 40 00 	mov    $0x4006f0,%rcx
  40053d:	48 c7 c7 0d 06 40 00 	mov    $0x40060d,%rdi
  400544:	e8 97 ff ff ff       	callq  4004e0 <__libc_start_main@plt>
  400549:	f4                   	hlt    
  40054a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400550 <deregister_tm_clones>:
  400550:	b8 5f 10 60 00       	mov    $0x60105f,%eax
  400555:	55                   	push   %rbp
  400556:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  40055c:	48 83 f8 0e          	cmp    $0xe,%rax
  400560:	48 89 e5             	mov    %rsp,%rbp
  400563:	77 02                	ja     400567 <deregister_tm_clones+0x17>
  400565:	5d                   	pop    %rbp
  400566:	c3                   	retq   
  400567:	b8 00 00 00 00       	mov    $0x0,%eax
  40056c:	48 85 c0             	test   %rax,%rax
  40056f:	74 f4                	je     400565 <deregister_tm_clones+0x15>
  400571:	5d                   	pop    %rbp
  400572:	bf 58 10 60 00       	mov    $0x601058,%edi
  400577:	ff e0                	jmpq   *%rax
  400579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400580 <register_tm_clones>:
  400580:	b8 58 10 60 00       	mov    $0x601058,%eax
  400585:	55                   	push   %rbp
  400586:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  40058c:	48 c1 f8 03          	sar    $0x3,%rax
  400590:	48 89 e5             	mov    %rsp,%rbp
  400593:	48 89 c2             	mov    %rax,%rdx
  400596:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40059a:	48 01 d0             	add    %rdx,%rax
  40059d:	48 d1 f8             	sar    %rax
  4005a0:	75 02                	jne    4005a4 <register_tm_clones+0x24>
  4005a2:	5d                   	pop    %rbp
  4005a3:	c3                   	retq   
  4005a4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005a9:	48 85 d2             	test   %rdx,%rdx
  4005ac:	74 f4                	je     4005a2 <register_tm_clones+0x22>
  4005ae:	5d                   	pop    %rbp
  4005af:	48 89 c6             	mov    %rax,%rsi
  4005b2:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005b7:	ff e2                	jmpq   *%rdx
  4005b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005c0 <__do_global_dtors_aux>:
  4005c0:	80 3d 91 0a 20 00 00 	cmpb   $0x0,0x200a91(%rip)        # 601058 <__TMC_END__>
  4005c7:	75 11                	jne    4005da <__do_global_dtors_aux+0x1a>
  4005c9:	55                   	push   %rbp
  4005ca:	48 89 e5             	mov    %rsp,%rbp
  4005cd:	e8 7e ff ff ff       	callq  400550 <deregister_tm_clones>
  4005d2:	5d                   	pop    %rbp
  4005d3:	c6 05 7e 0a 20 00 01 	movb   $0x1,0x200a7e(%rip)        # 601058 <__TMC_END__>
  4005da:	f3 c3                	repz retq 
  4005dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005e0 <frame_dummy>:
  4005e0:	48 83 3d 38 08 20 00 	cmpq   $0x0,0x200838(%rip)        # 600e20 <__JCR_END__>
  4005e7:	00 
  4005e8:	74 1e                	je     400608 <frame_dummy+0x28>
  4005ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4005ef:	48 85 c0             	test   %rax,%rax
  4005f2:	74 14                	je     400608 <frame_dummy+0x28>
  4005f4:	55                   	push   %rbp
  4005f5:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4005fa:	48 89 e5             	mov    %rsp,%rbp
  4005fd:	ff d0                	callq  *%rax
  4005ff:	5d                   	pop    %rbp
  400600:	e9 7b ff ff ff       	jmpq   400580 <register_tm_clones>
  400605:	0f 1f 00             	nopl   (%rax)
  400608:	e9 73 ff ff ff       	jmpq   400580 <register_tm_clones>

000000000040060d <main>:
  40060d:	55                   	push   %rbp
  40060e:	48 89 e5             	mov    %rsp,%rbp
  400611:	48 83 ec 30          	sub    $0x30,%rsp
  400615:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400618:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40061c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  400623:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400626:	89 45 f0             	mov    %eax,-0x10(%rbp)
  400629:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40062c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40062f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400633:	48 83 c0 08          	add    $0x8,%rax
  400637:	48 8b 00             	mov    (%rax),%rax
  40063a:	be 74 07 40 00       	mov    $0x400774,%esi
  40063f:	48 89 c7             	mov    %rax,%rdi
  400642:	e8 c9 fe ff ff       	callq  400510 <fopen@plt>
  400647:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40064b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400650:	75 0a                	jne    40065c <main+0x4f>
  400652:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  400657:	e9 89 00 00 00       	jmpq   4006e5 <main+0xd8>
  40065c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400660:	48 89 c7             	mov    %rax,%rdi
  400663:	e8 98 fe ff ff       	callq  400500 <_IO_getc@plt>
  400668:	88 45 eb             	mov    %al,-0x15(%rbp)
  40066b:	eb 39                	jmp    4006a6 <main+0x99>
  40066d:	80 7d eb 20          	cmpb   $0x20,-0x15(%rbp)
  400671:	74 0a                	je     40067d <main+0x70>
  400673:	80 7d eb 0a          	cmpb   $0xa,-0x15(%rbp)
  400677:	74 04                	je     40067d <main+0x70>
  400679:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40067d:	80 7d eb 20          	cmpb   $0x20,-0x15(%rbp)
  400681:	75 0a                	jne    40068d <main+0x80>
  400683:	80 7d eb 0a          	cmpb   $0xa,-0x15(%rbp)
  400687:	74 04                	je     40068d <main+0x80>
  400689:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  40068d:	80 7d eb 0a          	cmpb   $0xa,-0x15(%rbp)
  400691:	75 04                	jne    400697 <main+0x8a>
  400693:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  400697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40069b:	48 89 c7             	mov    %rax,%rdi
  40069e:	e8 5d fe ff ff       	callq  400500 <_IO_getc@plt>
  4006a3:	88 45 eb             	mov    %al,-0x15(%rbp)
  4006a6:	80 7d eb ff          	cmpb   $0xff,-0x15(%rbp)
  4006aa:	75 c1                	jne    40066d <main+0x60>
  4006ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006b0:	48 89 c7             	mov    %rax,%rdi
  4006b3:	e8 08 fe ff ff       	callq  4004c0 <fclose@plt>
  4006b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4006bc:	48 83 c0 08          	add    $0x8,%rax
  4006c0:	48 8b 30             	mov    (%rax),%rsi
  4006c3:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4006c6:	8b 55 f0             	mov    -0x10(%rbp),%edx
  4006c9:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4006cc:	49 89 f0             	mov    %rsi,%r8
  4006cf:	89 c6                	mov    %eax,%esi
  4006d1:	bf 76 07 40 00       	mov    $0x400776,%edi
  4006d6:	b8 00 00 00 00       	mov    $0x0,%eax
  4006db:	e8 f0 fd ff ff       	callq  4004d0 <printf@plt>
  4006e0:	b8 00 00 00 00       	mov    $0x0,%eax
  4006e5:	c9                   	leaveq 
  4006e6:	c3                   	retq   
  4006e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4006ee:	00 00 

00000000004006f0 <__libc_csu_init>:
  4006f0:	41 57                	push   %r15
  4006f2:	41 89 ff             	mov    %edi,%r15d
  4006f5:	41 56                	push   %r14
  4006f7:	49 89 f6             	mov    %rsi,%r14
  4006fa:	41 55                	push   %r13
  4006fc:	49 89 d5             	mov    %rdx,%r13
  4006ff:	41 54                	push   %r12
  400701:	4c 8d 25 08 07 20 00 	lea    0x200708(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400708:	55                   	push   %rbp
  400709:	48 8d 2d 08 07 20 00 	lea    0x200708(%rip),%rbp        # 600e18 <__init_array_end>
  400710:	53                   	push   %rbx
  400711:	4c 29 e5             	sub    %r12,%rbp
  400714:	31 db                	xor    %ebx,%ebx
  400716:	48 c1 fd 03          	sar    $0x3,%rbp
  40071a:	48 83 ec 08          	sub    $0x8,%rsp
  40071e:	e8 6d fd ff ff       	callq  400490 <_init>
  400723:	48 85 ed             	test   %rbp,%rbp
  400726:	74 1e                	je     400746 <__libc_csu_init+0x56>
  400728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40072f:	00 
  400730:	4c 89 ea             	mov    %r13,%rdx
  400733:	4c 89 f6             	mov    %r14,%rsi
  400736:	44 89 ff             	mov    %r15d,%edi
  400739:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40073d:	48 83 c3 01          	add    $0x1,%rbx
  400741:	48 39 eb             	cmp    %rbp,%rbx
  400744:	75 ea                	jne    400730 <__libc_csu_init+0x40>
  400746:	48 83 c4 08          	add    $0x8,%rsp
  40074a:	5b                   	pop    %rbx
  40074b:	5d                   	pop    %rbp
  40074c:	41 5c                	pop    %r12
  40074e:	41 5d                	pop    %r13
  400750:	41 5e                	pop    %r14
  400752:	41 5f                	pop    %r15
  400754:	c3                   	retq   
  400755:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40075c:	00 00 00 00 

0000000000400760 <__libc_csu_fini>:
  400760:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400764 <_fini>:
  400764:	48 83 ec 08          	sub    $0x8,%rsp
  400768:	48 83 c4 08          	add    $0x8,%rsp
  40076c:	c3                   	retq   
